import kotlin.math.pow
import kotlin.math.sqrt

fun main() {
    task1()
    task2()
    task3()
    task4()
    task5()
}

//1. Дано целое число n (>0). Найти сумму 1+1/2+1/3+…+1/n (вещественное число).
private fun task1() {
    val n = 8
    var res = 1.0
    for (i in 2..n) {
        res += 1.0 / i
    }
    println("1.\tСумма $n членов гармонического ряда равна " + "%.3f".format(res))
}

//2. Даны два целых числа a и b (a<b). Найти сумму квадратов всех целых чисел от a до b включительно.
// для этого есть готовые формулы, но посчитаем сами:
private fun task2() {
    val a = 1
    val b = 5
    var res = 0.0
    for (i in a..b) {
        res += i.toDouble().pow(2)
    }
    println("2.\tСумма квадратов чисел от $a до $b включительно равна " + "%.0f".format(res))
}

//3. Даны целые числа A и B (A<B). Вывести все целые числа от A до B включительно;
// при этом число A должно выводиться 1 раз, число A+1 должно выводиться 2 раза и т. д.
// (допустим a = 3, b = 5 à 3,4,4,5,5,5)
private fun task3() {
    val a = 4
    val b = 7
    var k = 0
    print("3.\t")
    for (i in a..b) {
        k++
        for (j in 1..k) {
            print("$i ")
        }
    }
    println()
}

//4. Дано число n. Написать программу, которая проверяет, является ли оно простым.
// Это ОЧЕНЬ сложная задача если число достаточно большое. Используем перебор делителей до кв. корня из n.
// Добавим также проверку деления на 2,3,5
private fun task4() {
    print("4.\tВведите число для проверки простоты: ")  //Попробуйте 35317, 115249, 12709189, 1179269947, 13012649341
    val nStr = readLine()
    val n: Long? = try {
        nStr?.toLong()
    } catch (e: NumberFormatException) {
        null
    }
    //println(n)
    if (n != null) {
        when {
            n < 0 -> println("\tОтрицательные числа не могут быть проверены на простоту!")
            n in 0..1 -> println("\t0 и 1 не являются ни простыми ни составными числами")
            n > 1 -> {
                var isPrime = true
                when {
                    //Число не простое если делится на 2, кроме самого числа 2
                    n % 2 == 0L -> {
                        if (n != 2L) {
                            isPrime = false
                            println("\tЧисло $n не является простым, т.к. делится на 2")
                        }
                    }
                    //Число не простое если делится на 3, кроме самого числа 3
                    sumOfNumbers(n) % 3 == 0 -> {
                        if (n != 3L) {
                            isPrime = false
                            println("\tЧисло $n не является простым, т.к. делится на 3")
                        }
                    }
                    //Число не простое если делится на 5, кроме самого числа 5
                    (n % 10).toInt() == 5 || (n % 10).toInt() == 0 -> {
                        if (n != 5L) {
                            isPrime = false
                            println("\tЧисло $n не является простым, т.к. делится на 5")
                        }
                    }
                    //Если признаки делимости на 2,3,5 не дали результата,
                    //то проверим делители начиная от 7 до корня из введенного числа
                    else -> {
                        for (i in 7..sqrt(n.toDouble()).toLong()) {
                            if ((n % i).toInt() == 0) {
                                isPrime = false
                                println("\tЧисло $n не является простым, т.к. делится на $i")
                            }
                        }
                    }
                }
                if (isPrime) {
                    println("\tЧисло $n простое")
                }
            }
        }
    }
}

private fun sumOfNumbers(n: Long): Int {
    var sum = 0
    var temp = n
    while (temp >= 1) {
        sum += (temp % 10).toInt()
        temp /= 10
    }
    return sum
}

/*
5. Есть загадка: "Что это такое: синий, большой, с усами и полностью набит зайцами?" Ответ: троллейбус.
Представим, что Вы загадываете эту загадку пользователю. Создайте программу, которая будет считывать с консоли ответ.

Условия задачи:
У пользователя есть 3 попытки. После трех ответов программа должна завершиться;
Если пользователь вводит "Троллейбус", мы выводим в консоль "Правильно!" и выходим из цикла;
Если пользователь вводит "Сдаюсь", мы выводим в консоль "Правильный ответ: троллейбус." и выходим из цикла;
Если пользователь вводит любой другой ответ, мы выводим в консоль "Подумай еще." и продолжаем цикл.
*/

private fun task5() {
    for (i in 1..3) {
        println("5.\tЧто это такое: синий, большой, с усами и полностью набит зайцами?:\t\t\\\\введите \"Сдаюсь\" для выхода")
        val answer = readLine()
        if (answer == "Троллейбус") {
            println("\tПравильно!")
            break
        } else if (answer == "Сдаюсь") {
            println("\tПравильный ответ: троллейбус.")
            break
        } else {
            println("\tПодумай еще.")
            continue
        }
    }
}


































