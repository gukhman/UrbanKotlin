import kotlin.math.pow

/*
4. Необходимо вывести на консоль такую последовательность чисел: 1 2 4 8 16 32 64 128 256 512
5. Дано целое число n = 20. Уменьшая его до 0, вывести на экран только четные числа.
*/

fun main() {
    task1()
    task2()
//    task3()
//    task4()
//    task5()
}

//1. Даны два числа a и b. Найти их среднее арифметическое.
private fun task1() {
    val a = 7
    val b = 16
    val res = (a + b) / 2.0
    println("1.\tСреднее арифметическое $a и $b = $res")
}

//2. Дана площадь S круга. Найти его диаметр D и длину L окружности, ограничивающей этот круг,
// учитывая, что L=π∗D, S=π∗(D^2)/4. В качестве значения π использовать 3.14.
private fun task2() {
    val π = 3.14
    val S = 78
    //S=π∗(D^2)/4 теоретически можно в цикле перебирать все D, но D - рациональное число и такой метод неэффективен,
    // т.к. на подбор каждой цифры D потребуется 1 проход от 0 до 9. Посчитаем D по формуле D = кв. корень из 4*S/π
    val D = (4 * S / π).pow(0.5)
    val L = π * D   // L = 2*(S*π).pow(0.5)
    println("2.\tSкр = $S; Dкр=${"%.2f".format(D)}; Lкр=${"%.2f".format(L)}")
}

/*3. Даны координаты двух противоположных вершин прямоугольника: (x1,y1), (x2,y2).
Стороны прямоугольника параллельны осям координат. Найти периметр и площадь данного прямоугольника.*/
val x1 = -3
val y1 = -2
val x2 = 1
val y2 = 4
//стороны параллельны осям, а значит все хорошо.
//координаты могут быть отрицательными. Посчитаем стороны a b прямоугольника:
//val a
























